'use strict';

exports.__esModule = true;
exports.filenameWithoutLoaders = filenameWithoutLoaders;
exports.filenameHasLoaders = filenameHasLoaders;
exports.filenameHasSchema = filenameHasSchema;
exports.isFilenameAbsolute = isFilenameAbsolute;
exports.makeUrl = makeUrl;
exports.makeLinkText = makeLinkText;

function filenameWithoutLoaders() {
  var filename = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];

  var index = filename.lastIndexOf('!');
  return index < 0 ? filename : filename.substr(index + 1);
}

function filenameHasLoaders(filename) {
  return filenameWithoutLoaders(filename) !== filename;
}

function filenameHasSchema(filename) {
  return (/^[\w]+:/.test(filename)
  );
}

function isFilenameAbsolute(filename) {
  return filenameWithoutLoaders(filename).indexOf('/') === 0;
}

function makeUrl(filename, scheme, line, column) {
  var actualFilename = filenameWithoutLoaders(filename);

  if (filenameHasSchema(filename)) {
    return actualFilename;
  }

  var url = 'file://' + actualFilename;
  if (scheme) {
    url = scheme + '://open?url=' + url;
    if (line && actualFilename === filename) {
      url = url + '&line=' + line;
      if (column) {
        url = url + '&column=' + column;
      }
    }
  }
  return url;
}

function makeLinkText(filename, line, column) {
  var text = filenameWithoutLoaders(filename);
  if (line && text === filename) {
    text = text + ':' + line;
    if (column) {
      text = text + ':' + column;
    }
  }
  return text;
}