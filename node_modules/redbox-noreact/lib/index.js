'use strict';

exports.__esModule = true;

var _typeofReactElement = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 60103;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _errorStackParser = require('error-stack-parser');

var _errorStackParser2 = _interopRequireDefault(_errorStackParser);

var _defaultStyle = require('./defaultStyle');

var _defaultStyle2 = _interopRequireDefault(_defaultStyle);

var _lib = require('./lib');

var RedBox = function RedBox(_ref) {
  var error = _ref.error;
  var editorScheme = _ref.editorScheme;
  var filename = _ref.filename;
  var style = _ref.style;
  var useColumns = _ref.useColumns;
  var useLines = _ref.useLines;

  var _extends2 = _extends({}, _defaultStyle2['default'], style);

  var file = _extends2.file;
  var frame = _extends2.frame;
  var linkToFile = _extends2.linkToFile;
  var message = _extends2.message;
  var redbox = _extends2.redbox;
  var stack = _extends2.stack;

  var frames = undefined;
  try {
    frames = _errorStackParser2['default'].parse(error).map(function (f, index) {
      var text = undefined;
      var url = undefined;

      if (index === 0 && filename && !_lib.isFilenameAbsolute(f.fileName)) {
        url = _lib.makeUrl(filename, editorScheme);
        text = _lib.makeLinkText(filename);
      } else {
        var lines = useLines ? f.lineNumber : null;
        var columns = useColumns ? f.columnNumber : null;
        url = _lib.makeUrl(f.fileName, editorScheme, lines, columns);
        text = _lib.makeLinkText(f.fileName, lines, columns);
      }
      return {
        $$typeof: _typeofReactElement,
        type: 'div',
        key: index,
        ref: null,
        props: {
          children: [{
            $$typeof: _typeofReactElement,
            type: 'div',
            key: null,
            ref: null,
            props: {
              children: f.functionName
            },
            _owner: null
          }, {
            $$typeof: _typeofReactElement,
            type: 'div',
            key: null,
            ref: null,
            props: {
              children: {
                $$typeof: _typeofReactElement,
                type: 'a',
                key: null,
                ref: null,
                props: {
                  children: text,
                  href: url,
                  style: linkToFile
                },
                _owner: null
              },
              style: file
            },
            _owner: null
          }],
          style: frame
        },
        _owner: null
      };
    });
  } catch (e) {
    frames = {
      $$typeof: _typeofReactElement,
      type: 'div',
      key: 0,
      ref: null,
      props: {
        children: {
          $$typeof: _typeofReactElement,
          type: 'div',
          key: null,
          ref: null,
          props: {
            children: 'Failed to parse stack trace. Stack trace information unavailable.'
          },
          _owner: null
        },
        style: frame
      },
      _owner: null
    };
  }

  return {
    $$typeof: _typeofReactElement,
    type: 'div',
    key: null,
    ref: null,
    props: {
      children: [{
        $$typeof: _typeofReactElement,
        type: 'div',
        key: null,
        ref: null,
        props: {
          children: [error.name, ': ', error.message],
          style: message
        },
        _owner: null
      }, {
        $$typeof: _typeofReactElement,
        type: 'div',
        key: null,
        ref: null,
        props: {
          children: frames,
          style: stack
        },
        _owner: null
      }],
      style: redbox
    },
    _owner: null
  };
};

RedBox.displayName = 'RedBox';
RedBox.defaultProps = {
  useColumns: true,
  useLines: true
};

exports['default'] = RedBox;
module.exports = exports['default'];